.. _localkit_testing_debugging:============================================================Part 2: Running Monaca Debugger with Monaca Localkit============================================================:ref:`monaca_debugger_index` is a powerful application for testing and debugging your Monaca applications on real devices in real time.When developing Monaca apps on your local PC (running Monaca Localkit), assuming that the local PC is successfully paired with Monaca Debugger, all changes made to project files will be pushed into Monaca Debugger as soon as you save those changes.In this page, we describe a step-by-step instruction of how to: - run the project on Monaca Debugger.- get real-time updates between Monaca Localkit and Monaca Debugger.- start debugging the project with Chrome DevTools.Before Getting Started============================Please install Monaca Debugger on your device.     .. figure:: images/testing_debugging/App_Store.jpg     :target: https://itunes.apple.com/us/app/monaca/id550941371?mt=8     :alt: App Store Logo     :width: 100px      :align: left  .. figure:: images/testing_debugging/Google_play.png     :target: https://play.google.com/store/apps/details?id=mobi.monaca.debugger&hl=en        :alt: Google play logo     :width: 100px     :align: left  .. rst-class:: clear.. note:: Please refer to :ref:`Monaca Debugger Installation <debugger_installation_index>` for other platforms.Step 1: Running a Project on Monaca Debugger====================================================1. Pair the Monaca Debugger with the PC hosting Monaca Localkit. Please refer to :ref:`localkit_pairing_debugging`.2. If your pairing is successful, a project list will appear in Monaca Debugger and the connected debugger will appear in the Monaca Localkit (see screenshots below as an example). However, if you failed the pairing, please refer to :ref:`troubleshoot the Pairing <troubleshoot_pair>`.  .. figure:: images/testing_debugging/1.png      :width: 170px       :align: left      Monaca Debugger  .. figure:: images/testing_debugging/2.png      :width: 450px      :align: left      Monaca Localkit  .. rst-class:: clear3. Then, run the project on Monaca Debugger. To do this, you can either click on the project name in Monaca Debugger or click :guilabel:`Run` button in Monaca Localkit.4. Now the screen on your device should look like a screenshot below. Use :guilabel:`Back` button within Debugger Menu button to go back to the Project List screen.  .. figure:: images/testing_debugging/3.png      :width: 250px       :align: left  .. figure:: images/testing_debugging/5.png      :width: 250px      :align: left  .. rst-class:: clear5. Try and test your project by adding a new memo. If a new memo appears, your project is running properly.  .. figure:: images/testing_debugging/4.png      :width: 250px      :align: left  .. rst-class:: clearStep 2: Real-time Update between Monaca Localkit and Monaca Debugger=============================================================================1. Run the project on the debugger.2. Let's make some changes in a project file and save them (read more on :ref:`Edit Project Files <edit_project_localkit>`). For example, try to change the title of the application in ``index.html`` file or the style of page in ``style.css`` file. Please notice that, :guilabel:`Live Reload` button is enable by default. This allows the real-time updates between the debugger and Monaca Localkit. Turn this off if you want to disable this real-time update.   .. figure:: images/testing_debugging/7.png      :width: 700px      :align: left  .. rst-class:: clear3. The saved changes should be updated simultaneously to your app in Monaca Debugger on your device. You can also click on :guilabel:`Refresh` button to retrieve the latest updates of your app in case the changes are not reflected.  .. figure:: images/testing_debugging/6.png      :width: 250px      :align: left  .. rst-class:: clearStep 3: Debug the project with Monaca Debugger=============================================================================Monaca Localkit allows you to debug your application with `Chrome DevTools <https://developer.chrome.com/devtools>`_ using USB connection. Before starting this USB debugging, please make sure to :ref:`enable USB Debugging option <pre_debug_app>` on your device with appropriate version of Monaca Debugger.1. Run the project on the debugger.2. From the Debugger Menu button, click on :guilabel:`Inspector` button (see the screenshot below).  .. figure:: images/testing_debugging/8.png      :width: 250px      :align: left  .. rst-class:: clear3. The Chrome DevTools should be opened in the host PC. Then, you can start inspecting and debugging your app right away. For more information, please refer `Inspecting <https://developer.chrome.com/devtools/docs/dom-and-styles>`_ and `JavaScript Debugging <https://developer.chrome.com/devtools/docs/javascript-debugging>`_ with Chrome DevTools. However, if the Chrome DevTools are failed to open, please refer to :ref:`troubleshoot_inspector`.  .. figure:: images/testing_debugging/9.png      :width: 700px      :align: left  .. rst-class:: clear.. note:: You can also open the Chrome DevTools directly from Monaca Localkit. Select a project you want to debug and then click on :guilabel:`Inspector` button of the paired debugger (see the screenshot below)... figure:: images/testing_debugging/10.png    :width: 700px    :align: center.. rst-class:: clear.. note:: Please refer to :ref:`monaca_debugger_features` to explore the other functions provided by Monaca Debugger... seealso::  *See Also*:  - :ref:`localkit_starting_project`  - :ref:`localkit_building_app`  - :ref:`localkit_publishing_app`