.. _monaca_vs_testing_debugging:===========================================================================Part 2: Running Monaca Debugger with Monaca for Visual Studio===========================================================================.. rst-class:: right-menu:ref:`monaca_debugger_index` is a powerful application for testing and debugging your Monaca applications on real devices in real time.When developing Monaca apps on your local PC, assuming that your local PC is successfully paired with Monaca Debugger, all changes made to your project files will be pushed into your Monaca Debugger as soon as you save those changes.Before Getting Started============================Please install Monaca Debugger on your device.     .. figure:: images/testing_debugging/App_Store.jpg     :target: https://itunes.apple.com/us/app/monaca/id550941371?mt=8     :alt: App Store Logo     :width: 100px      :align: left  .. figure:: images/testing_debugging/Google_play.png     :target: https://play.google.com/store/apps/details?id=mobi.monaca.debugger&hl=en        :alt: Google play logo     :width: 100px     :align: left  .. rst-class:: clear.. note:: Please refer to :ref:`Monaca Debugger Installation <debugger_installation_index>` for other platforms.Step 1: Running the Project on Monaca Debugger====================================================1. Launch Monaca Debugger app and sign in using your Monaca account information. Make sure you are using the same account information you use for Monaca within Visual Studio IDE.  .. figure:: images/testing_debugging/1.png    :width: 250px    :align: left  .. rst-class:: clear2. Pair the Monaca Debugger with the PC hosting Monaca for Visual Studio. Once logged in, Monaca Debugger should be able to detect the host PC as shown below. Then, click :guilabel:`Pair` button to start the pairing.   .. figure:: images/testing_debugging/2.png    :width: 250px    :align: left  .. rst-class:: clear3. If your pairing is successful, a project list will appear in Monaca Debugger and the connected debugger will appear in the Monaca panel (see screenshots below as an example). However, if Monaca Debugger is unable to detect the host PC automatically, please refer to :ref:`troubleshooting the Pairing<troubleshoot_pair>`.  .. figure:: images/testing_debugging/3.png      :width: 250px       :align: left      Monaca Debugger  .. figure:: images/testing_debugging/4.png      :width: 232px      :align: left      Monaca Panel within Visual Studio  .. rst-class:: clear4. In order to run your project in Monaca Debugger, you can just click on the project name in the debugger or click :guilabel:`Run in Device` button in Monaca panel within Visual Studio. Then, your project should be running in the debugger as shown below:  .. figure:: images/testing_debugging/5.png      :width: 250px      :align: left  .. rst-class:: clearStep 2: Real-time Updates between Your Project and Monaca Debugger=============================================================================1. Run the project on the debugger.2. Let's make some changes in a project file and save them (please refer to :ref:`Edit Project Files <monaca_vs_edit_project>`). In this example, we edit :file:`index.html` and change the title of each list item from "Rorem Ipsum" to "Monaca and OnsenUI". Then, save the change.  .. figure:: images/testing_debugging/6.png    :width: 700px    :align: left  .. rst-class:: clear3. The saved changes will be sent to Monaca Debugger on your device. You can also click on :guilabel:`Reload` button to retrieve the latest updates of your app in case the changes are not reflected.  .. figure:: images/testing_debugging/7.png      :width: 250px       :align: left      Updated List Item Titles  .. figure:: images/testing_debugging/8.png      :width: 250px      :align: left      Reload Button      .. rst-class:: clearThat's it! That's how easy it is to use Monaca Debugger. Please try to make more changes to your project and see how it runs on the debugger. .. note:: Please refer to :ref:`monaca_debugger_features` to explore the other functions provided by Monaca Debugger... seealso::  *See Also*:  - :ref:`monaca_vs_starting_project`  - :ref:`monaca_vs_building_app`  - :ref:`monaca_vs_publishing_app`